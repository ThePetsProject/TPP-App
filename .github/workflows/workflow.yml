name: Build, push, and deploy
on:
  push:
    branches:
      - main

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@main
  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #     - run: npm ci
  #     - run: npm run coverage
  build:
    # needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout master
      uses: actions/checkout@main
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    # Build a Docker image of your application in your registry and tag the image with the $GITHUB_SHA.
    - name: Build container image
      # run: docker build -t ${{ secrets.REGISTRY_NAME }}/tpp:ACC-REGISTRY-$(echo $GITHUB_SHA | head -c7) .
      run: docker build -t ${{ secrets.REGISTRY_NAME }}/tpp:tpp-app-latest .

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Push image to DigitalOcean Container Registry
      run: docker push ${{ secrets.REGISTRY_NAME }}/tpp:tpp-app-latest

    # Deploy to DigitalOCcean Kubernetes.
    - name: Update deployment file
      run: TAG=tpp-app-latest && sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/tpp:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml

    - name: Verify deployment
      run: kubectl rollout status deployment/tpp-app
      